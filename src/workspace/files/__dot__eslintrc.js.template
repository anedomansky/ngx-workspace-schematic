module.exports = {
  "root": true,
  "ignorePatterns": ["dist/**/*", "coverage/**/*", "src/gen/**/*"],
  env: {
    browser: true,
  },
  overrides: [
    {
      files: ["*.spec.ts"],
      excludedFiles: ["*.e2e.spec.ts"],
      extends: ["plugin:testing-library/angular", "plugin:jest/recommended"],
      plugins: ["jest"],
      rules: {
        "testing-library/no-render-in-lifecycle": "off",
        "jest/expect-expect": [
          "error",
          {
            assertFunctionNames: ["screen.findBy*", "expect"],
            additionalTestBlockFunctions: [],
          },
        ],
      },
    },
    {
      files: ["*.ts", "*.tsx"],
      parser: "@typescript-eslint/parser",
      plugins: [
        "@typescript-eslint",
        "simple-import-sort",
        "import",
        "prettier",
        "compat",
        "unused-imports",
      ],
      extends: [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:prettier/recommended",
        "plugin:compat/recommended",
      ],
      rules: {
        "simple-import-sort/imports": "error",
        "simple-import-sort/exports": "error",
        "import/first": "error",
        "import/newline-after-import": "error",
        "import/no-duplicates": "error",
        "@angular-eslint/component-selector": [
          "error",
          {
            prefix: "insure",
            style: "kebab-case",
            type: "element",
          },
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            prefix: "insure",
            style: "camelCase",
            type: "attribute",
          },
        ],
        "@angular-eslint/component-class-suffix": [
          "error",
          {
            suffixes: ["Component"],
          },
        ],
        "@angular-eslint/no-host-metadata-property": "off",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "warn",
          {
            vars: "all",
            varsIgnorePattern: "^_",
            args: "after-used",
            argsIgnorePattern: "^_",
          },
        ],
        "prettier/prettier": [
          "error",
          {
            singleQuote: true,
            useTabs: false,
            tabWidth: 2,
            semi: true,
            bracketSpacing: true,
            endOfLine: "auto",
          },
        ],
        "no-restricted-syntax": [
          "error",
          {
            selector: "TSEnumDeclaration",
            message:
              "Do not use enum at all. See: https://www.typescriptlang.org/docs/handbook/enums.html#const-enum-pitfalls",
          },
        ],
      },
    },
    {
      files: ["*.html"],
      plugins: ["prettier"],
      extends: [
        "plugin:@angular-eslint/template/recommended",
        "plugin:@angular-eslint/template/accessibility",
        "plugin:prettier/recommended",
      ],
      rules: {
        "@angular-eslint/template/prefer-control-flow": ["warn"],
        "@angular-eslint/template/alt-text": ["warn"],
        "@angular-eslint/template/elements-content": ["warn"],
        "@angular-eslint/template/label-has-associated-control": ["warn"],
        "@angular-eslint/template/no-positive-tabindex": ["warn"],
        "@angular-eslint/template/table-scope": ["warn"],
        "@angular-eslint/template/valid-aria": ["warn"],
        "@angular-eslint/template/click-events-have-key-events": 1,
        "@angular-eslint/template/mouse-events-have-key-events": ["warn"],
        "@angular-eslint/template/no-autofocus": ["warn"],
        "@angular-eslint/template/no-distracting-elements": ["warn"],
        "@angular-eslint/template/interactive-supports-focus": 1,
        "prettier/prettier": [
          "error",
          {
            singleQuote: false,
            useTabs: false,
            tabWidth: 2,
            semi: true,
            bracketSpacing: true,
            endOfLine: "auto",
            parser: "angular",
          },
        ],
      },
    },
  ],
  parserOptions: {
    project: "./tsconfig.json",
  },
}
